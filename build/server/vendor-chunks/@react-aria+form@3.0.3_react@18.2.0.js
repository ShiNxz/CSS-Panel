"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@react-aria+form@3.0.3_react@18.2.0";
exports.ids = ["vendor-chunks/@react-aria+form@3.0.3_react@18.2.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@react-aria+form@3.0.3_react@18.2.0/node_modules/@react-aria/form/dist/import.mjs":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@react-aria+form@3.0.3_react@18.2.0/node_modules/@react-aria/form/dist/import.mjs ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useFormValidation: () => (/* binding */ $e93e671b31057976$export$b8473d3665f3a75a)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/.pnpm/next@14.1.0_react-dom@18.2.0_react@18.2.0_sass@1.70.0/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var _react_aria_interactions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @react-aria/interactions */ \"(ssr)/./node_modules/.pnpm/@react-aria+interactions@3.21.1_react@18.2.0/node_modules/@react-aria/interactions/dist/import.mjs\");\n/* harmony import */ var _react_aria_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @react-aria/utils */ \"(ssr)/./node_modules/.pnpm/@react-aria+utils@3.23.2_react@18.2.0/node_modules/@react-aria/utils/dist/import.mjs\");\n\n\n\n/*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ /*\n * Copyright 2023 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ function $e93e671b31057976$export$b8473d3665f3a75a(props, state, ref) {\n    let { validationBehavior: validationBehavior, focus: focus } = props;\n    // This is a useLayoutEffect so that it runs before the useEffect in useFormValidationState, which commits the validation change.\n    (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_1__.useLayoutEffect)(()=>{\n        if (validationBehavior === \"native\" && (ref === null || ref === void 0 ? void 0 : ref.current)) {\n            let errorMessage = state.realtimeValidation.isInvalid ? state.realtimeValidation.validationErrors.join(\" \") || \"Invalid value.\" : \"\";\n            ref.current.setCustomValidity(errorMessage);\n            // Prevent default tooltip for validation message.\n            // https://bugzilla.mozilla.org/show_bug.cgi?id=605277\n            if (!ref.current.hasAttribute(\"title\")) ref.current.title = \"\";\n            if (!state.realtimeValidation.isInvalid) state.updateValidation($e93e671b31057976$var$getNativeValidity(ref.current));\n        }\n    });\n    let onReset = (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_1__.useEffectEvent)(()=>{\n        state.resetValidation();\n    });\n    let onInvalid = (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_1__.useEffectEvent)((e)=>{\n        var _ref_current;\n        // Only commit validation if we are not already displaying one.\n        // This avoids clearing server errors that the user didn't actually fix.\n        if (!state.displayValidation.isInvalid) state.commitValidation();\n        // Auto focus the first invalid input in a form, unless the error already had its default prevented.\n        let form = ref === null || ref === void 0 ? void 0 : (_ref_current = ref.current) === null || _ref_current === void 0 ? void 0 : _ref_current.form;\n        if (!e.defaultPrevented && ref && form && $e93e671b31057976$var$getFirstInvalidInput(form) === ref.current) {\n            var _ref_current1;\n            if (focus) focus();\n            else (_ref_current1 = ref.current) === null || _ref_current1 === void 0 ? void 0 : _ref_current1.focus();\n            // Always show focus ring.\n            (0, _react_aria_interactions__WEBPACK_IMPORTED_MODULE_2__.setInteractionModality)(\"keyboard\");\n        }\n        // Prevent default browser error UI from appearing.\n        e.preventDefault();\n    });\n    let onChange = (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_1__.useEffectEvent)(()=>{\n        state.commitValidation();\n    });\n    (0, react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        let input = ref === null || ref === void 0 ? void 0 : ref.current;\n        if (!input) return;\n        let form = input.form;\n        input.addEventListener(\"invalid\", onInvalid);\n        input.addEventListener(\"change\", onChange);\n        form === null || form === void 0 ? void 0 : form.addEventListener(\"reset\", onReset);\n        return ()=>{\n            input.removeEventListener(\"invalid\", onInvalid);\n            input.removeEventListener(\"change\", onChange);\n            form === null || form === void 0 ? void 0 : form.removeEventListener(\"reset\", onReset);\n        };\n    }, [\n        ref,\n        onInvalid,\n        onChange,\n        onReset,\n        validationBehavior\n    ]);\n}\nfunction $e93e671b31057976$var$getValidity(input) {\n    // The native ValidityState object is live, meaning each property is a getter that returns the current state.\n    // We need to create a snapshot of the validity state at the time this function is called to avoid unpredictable React renders.\n    let validity = input.validity;\n    return {\n        badInput: validity.badInput,\n        customError: validity.customError,\n        patternMismatch: validity.patternMismatch,\n        rangeOverflow: validity.rangeOverflow,\n        rangeUnderflow: validity.rangeUnderflow,\n        stepMismatch: validity.stepMismatch,\n        tooLong: validity.tooLong,\n        tooShort: validity.tooShort,\n        typeMismatch: validity.typeMismatch,\n        valueMissing: validity.valueMissing,\n        valid: validity.valid\n    };\n}\nfunction $e93e671b31057976$var$getNativeValidity(input) {\n    return {\n        isInvalid: !input.validity.valid,\n        validationDetails: $e93e671b31057976$var$getValidity(input),\n        validationErrors: input.validationMessage ? [\n            input.validationMessage\n        ] : []\n    };\n}\nfunction $e93e671b31057976$var$getFirstInvalidInput(form) {\n    for(let i = 0; i < form.elements.length; i++){\n        let element = form.elements[i];\n        if (!element.validity.valid) return element;\n    }\n    return null;\n}\n //# sourceMappingURL=module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@react-aria+form@3.0.3_react@18.2.0/node_modules/@react-aria/form/dist/import.mjs\n");

/***/ })

};
;