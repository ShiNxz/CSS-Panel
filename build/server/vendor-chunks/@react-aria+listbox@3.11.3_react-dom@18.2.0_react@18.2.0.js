"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@react-aria+listbox@3.11.3_react-dom@18.2.0_react@18.2.0";
exports.ids = ["vendor-chunks/@react-aria+listbox@3.11.3_react-dom@18.2.0_react@18.2.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@react-aria+listbox@3.11.3_react-dom@18.2.0_react@18.2.0/node_modules/@react-aria/listbox/dist/import.mjs":
/*!**************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@react-aria+listbox@3.11.3_react-dom@18.2.0_react@18.2.0/node_modules/@react-aria/listbox/dist/import.mjs ***!
  \**************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getItemId: () => (/* binding */ $b1f0cad8af73213b$export$9145995848b05025),\n/* harmony export */   listData: () => (/* binding */ $b1f0cad8af73213b$export$3585ede4d035bf14),\n/* harmony export */   useListBox: () => (/* binding */ $c132121280ec012d$export$50eacbbf140a3141),\n/* harmony export */   useListBoxSection: () => (/* binding */ $af383d3bef1cfdc9$export$c3f9f39876e4bc7),\n/* harmony export */   useOption: () => (/* binding */ $293f70390ea03370$export$497855f14858aa34)\n/* harmony export */ });\n/* harmony import */ var _react_aria_utils__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @react-aria/utils */ \"(ssr)/./node_modules/.pnpm/@react-aria+utils@3.23.0_react@18.2.0/node_modules/@react-aria/utils/dist/import.mjs\");\n/* harmony import */ var _react_aria_interactions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @react-aria/interactions */ \"(ssr)/./node_modules/.pnpm/@react-aria+interactions@3.20.1_react@18.2.0/node_modules/@react-aria/interactions/dist/import.mjs\");\n/* harmony import */ var _react_aria_label__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @react-aria/label */ \"(ssr)/./node_modules/.pnpm/@react-aria+label@3.7.4_react@18.2.0/node_modules/@react-aria/label/dist/import.mjs\");\n/* harmony import */ var _react_aria_selection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @react-aria/selection */ \"(ssr)/./node_modules/.pnpm/@react-aria+selection@3.17.3_react-dom@18.2.0_react@18.2.0/node_modules/@react-aria/selection/dist/import.mjs\");\n/* harmony import */ var _react_stately_collections__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @react-stately/collections */ \"(ssr)/./node_modules/.pnpm/@react-stately+collections@3.10.4_react@18.2.0/node_modules/@react-stately/collections/dist/import.mjs\");\n\n\n\n\n\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ /*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ /*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ const $b1f0cad8af73213b$export$3585ede4d035bf14 = new WeakMap();\nfunction $b1f0cad8af73213b$var$normalizeKey(key) {\n    if (typeof key === \"string\") return key.replace(/\\s*/g, \"\");\n    return \"\" + key;\n}\nfunction $b1f0cad8af73213b$export$9145995848b05025(state, itemKey) {\n    let data = $b1f0cad8af73213b$export$3585ede4d035bf14.get(state);\n    if (!data) throw new Error(\"Unknown list\");\n    return `${data.id}-option-${$b1f0cad8af73213b$var$normalizeKey(itemKey)}`;\n}\nfunction $c132121280ec012d$export$50eacbbf140a3141(props, state, ref) {\n    let domProps = (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_0__.filterDOMProps)(props, {\n        labelable: true\n    });\n    // Use props instead of state here. We don't want this to change due to long press.\n    let selectionBehavior = props.selectionBehavior || \"toggle\";\n    let linkBehavior = props.linkBehavior || (selectionBehavior === \"replace\" ? \"action\" : \"override\");\n    if (selectionBehavior === \"toggle\" && linkBehavior === \"action\") // to initiate selection (checkboxes are not allowed inside a listbox). Link items will not be\n    // selectable in this configuration.\n    linkBehavior = \"override\";\n    let { listProps: listProps } = (0, _react_aria_selection__WEBPACK_IMPORTED_MODULE_1__.useSelectableList)({\n        ...props,\n        ref: ref,\n        selectionManager: state.selectionManager,\n        collection: state.collection,\n        disabledKeys: state.disabledKeys,\n        linkBehavior: linkBehavior\n    });\n    let { focusWithinProps: focusWithinProps } = (0, _react_aria_interactions__WEBPACK_IMPORTED_MODULE_2__.useFocusWithin)({\n        onFocusWithin: props.onFocus,\n        onBlurWithin: props.onBlur,\n        onFocusWithinChange: props.onFocusChange\n    });\n    // Share list id and some props with child options.\n    let id = (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_0__.useId)(props.id);\n    (0, $b1f0cad8af73213b$export$3585ede4d035bf14).set(state, {\n        id: id,\n        shouldUseVirtualFocus: props.shouldUseVirtualFocus,\n        shouldSelectOnPressUp: props.shouldSelectOnPressUp,\n        shouldFocusOnHover: props.shouldFocusOnHover,\n        isVirtualized: props.isVirtualized,\n        onAction: props.onAction,\n        linkBehavior: linkBehavior\n    });\n    let { labelProps: labelProps, fieldProps: fieldProps } = (0, _react_aria_label__WEBPACK_IMPORTED_MODULE_3__.useLabel)({\n        ...props,\n        id: id,\n        // listbox is not an HTML input element so it\n        // shouldn't be labeled by a <label> element.\n        labelElementType: \"span\"\n    });\n    return {\n        labelProps: labelProps,\n        listBoxProps: (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_0__.mergeProps)(domProps, focusWithinProps, state.selectionManager.selectionMode === \"multiple\" ? {\n            \"aria-multiselectable\": \"true\"\n        } : {}, {\n            role: \"listbox\",\n            ...(0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_0__.mergeProps)(fieldProps, listProps)\n        })\n    };\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ function $293f70390ea03370$export$497855f14858aa34(props, state, ref) {\n    var _item_props;\n    let { key: key } = props;\n    let data = (0, $b1f0cad8af73213b$export$3585ede4d035bf14).get(state);\n    var _props_isDisabled;\n    let isDisabled = (_props_isDisabled = props.isDisabled) !== null && _props_isDisabled !== void 0 ? _props_isDisabled : state.disabledKeys.has(key);\n    var _props_isSelected;\n    let isSelected = (_props_isSelected = props.isSelected) !== null && _props_isSelected !== void 0 ? _props_isSelected : state.selectionManager.isSelected(key);\n    var _props_shouldSelectOnPressUp;\n    let shouldSelectOnPressUp = (_props_shouldSelectOnPressUp = props.shouldSelectOnPressUp) !== null && _props_shouldSelectOnPressUp !== void 0 ? _props_shouldSelectOnPressUp : data === null || data === void 0 ? void 0 : data.shouldSelectOnPressUp;\n    var _props_shouldFocusOnHover;\n    let shouldFocusOnHover = (_props_shouldFocusOnHover = props.shouldFocusOnHover) !== null && _props_shouldFocusOnHover !== void 0 ? _props_shouldFocusOnHover : data === null || data === void 0 ? void 0 : data.shouldFocusOnHover;\n    var _props_shouldUseVirtualFocus;\n    let shouldUseVirtualFocus = (_props_shouldUseVirtualFocus = props.shouldUseVirtualFocus) !== null && _props_shouldUseVirtualFocus !== void 0 ? _props_shouldUseVirtualFocus : data === null || data === void 0 ? void 0 : data.shouldUseVirtualFocus;\n    var _props_isVirtualized;\n    let isVirtualized = (_props_isVirtualized = props.isVirtualized) !== null && _props_isVirtualized !== void 0 ? _props_isVirtualized : data === null || data === void 0 ? void 0 : data.isVirtualized;\n    let labelId = (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_0__.useSlotId)();\n    let descriptionId = (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_0__.useSlotId)();\n    let optionProps = {\n        role: \"option\",\n        \"aria-disabled\": isDisabled || undefined,\n        \"aria-selected\": state.selectionManager.selectionMode !== \"none\" ? isSelected : undefined\n    };\n    // Safari with VoiceOver on macOS misreads options with aria-labelledby or aria-label as simply \"text\".\n    // We should not map slots to the label and description on Safari and instead just have VoiceOver read the textContent.\n    // https://bugs.webkit.org/show_bug.cgi?id=209279\n    if (!((0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_0__.isMac)() && (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_0__.isWebKit)())) {\n        optionProps[\"aria-label\"] = props[\"aria-label\"];\n        optionProps[\"aria-labelledby\"] = labelId;\n        optionProps[\"aria-describedby\"] = descriptionId;\n    }\n    let item = state.collection.getItem(key);\n    if (isVirtualized) {\n        let index = Number(item === null || item === void 0 ? void 0 : item.index);\n        optionProps[\"aria-posinset\"] = Number.isNaN(index) ? undefined : index + 1;\n        optionProps[\"aria-setsize\"] = (0, _react_stately_collections__WEBPACK_IMPORTED_MODULE_4__.getItemCount)(state.collection);\n    }\n    let { itemProps: itemProps, isPressed: isPressed, isFocused: isFocused, hasAction: hasAction, allowsSelection: allowsSelection } = (0, _react_aria_selection__WEBPACK_IMPORTED_MODULE_1__.useSelectableItem)({\n        selectionManager: state.selectionManager,\n        key: key,\n        ref: ref,\n        shouldSelectOnPressUp: shouldSelectOnPressUp,\n        allowsDifferentPressOrigin: shouldSelectOnPressUp && shouldFocusOnHover,\n        isVirtualized: isVirtualized,\n        shouldUseVirtualFocus: shouldUseVirtualFocus,\n        isDisabled: isDisabled,\n        onAction: (data === null || data === void 0 ? void 0 : data.onAction) ? ()=>{\n            var _data_onAction;\n            return data === null || data === void 0 ? void 0 : (_data_onAction = data.onAction) === null || _data_onAction === void 0 ? void 0 : _data_onAction.call(data, key);\n        } : undefined,\n        linkBehavior: data === null || data === void 0 ? void 0 : data.linkBehavior\n    });\n    let { hoverProps: hoverProps } = (0, _react_aria_interactions__WEBPACK_IMPORTED_MODULE_2__.useHover)({\n        isDisabled: isDisabled || !shouldFocusOnHover,\n        onHoverStart () {\n            if (!(0, _react_aria_interactions__WEBPACK_IMPORTED_MODULE_2__.isFocusVisible)()) {\n                state.selectionManager.setFocused(true);\n                state.selectionManager.setFocusedKey(key);\n            }\n        }\n    });\n    let domProps = (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_0__.filterDOMProps)(item === null || item === void 0 ? void 0 : item.props, {\n        isLink: !!(item === null || item === void 0 ? void 0 : (_item_props = item.props) === null || _item_props === void 0 ? void 0 : _item_props.href)\n    });\n    delete domProps.id;\n    return {\n        optionProps: {\n            ...optionProps,\n            ...(0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_0__.mergeProps)(domProps, itemProps, hoverProps),\n            id: (0, $b1f0cad8af73213b$export$9145995848b05025)(state, key)\n        },\n        labelProps: {\n            id: labelId\n        },\n        descriptionProps: {\n            id: descriptionId\n        },\n        isFocused: isFocused,\n        isFocusVisible: isFocused && (0, _react_aria_interactions__WEBPACK_IMPORTED_MODULE_2__.isFocusVisible)(),\n        isSelected: isSelected,\n        isDisabled: isDisabled,\n        isPressed: isPressed,\n        allowsSelection: allowsSelection,\n        hasAction: hasAction\n    };\n}\n/*\n * Copyright 2020 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */ function $af383d3bef1cfdc9$export$c3f9f39876e4bc7(props) {\n    let { heading: heading, \"aria-label\": ariaLabel } = props;\n    let headingId = (0, _react_aria_utils__WEBPACK_IMPORTED_MODULE_0__.useId)();\n    return {\n        itemProps: {\n            role: \"presentation\"\n        },\n        headingProps: heading ? {\n            // Techincally, listbox cannot contain headings according to ARIA.\n            // We hide the heading from assistive technology, using role=\"presentation\",\n            // and only use it as a visual label for the nested group.\n            id: headingId,\n            role: \"presentation\"\n        } : {},\n        groupProps: {\n            role: \"group\",\n            \"aria-label\": ariaLabel,\n            \"aria-labelledby\": heading ? headingId : undefined\n        }\n    };\n}\n //# sourceMappingURL=module.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@react-aria+listbox@3.11.3_react-dom@18.2.0_react@18.2.0/node_modules/@react-aria/listbox/dist/import.mjs\n");

/***/ })

};
;