"use strict";(()=>{var e={};e.id=411,e.ids=[411],e.modules={429:e=>{e.exports=require("cookie-session")},62418:e=>{e.exports=require("mysql2/promise")},20145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},3511:e=>{e.exports=require("passport")},53686:e=>{e.exports=require("passport-steam")},48612:e=>{e.exports=require("zod-validation-error")},99648:e=>{e.exports=import("axios")},97564:e=>{e.exports=import("chalk")},45616:e=>{e.exports=import("next-connect")},2782:e=>{e.exports=import("steam-api-sdk")},9926:e=>{e.exports=import("zod")},18390:(e,t,s)=>{s.a(e,async(e,r)=>{try{s.r(t),s.d(t,{config:()=>l,default:()=>d,routeModule:()=>c});var a=s(88667),i=s(25828),o=s(38051),n=s(48932),u=e([n]);n=(u.then?(await u)():u)[0];let d=(0,o.l)(n,"default"),l=(0,o.l)(n,"config"),c=new a.PagesAPIRouteModule({definition:{kind:i.x.PAGES_API,page:"/api/admin/settings",pathname:"/api/admin/settings",bundlePath:"",filename:""},userland:n});r()}catch(e){r(e)}})},48932:(e,t,s)=>{s.a(e,async(e,r)=>{try{s.r(t),s.d(t,{default:()=>l});var a=s(6995),i=s(74186),o=s(73153),n=s(10143),u=s(46634),d=e([a,i,o,n,u]);[a,i,o,n,u]=d.then?(await d)():d;let l=async(e,t)=>{if(await i.Z.run(e,t),!await (0,o.Z)(e,t,["@web/root","@css/root"],"OR"))return;let{method:s}=e;switch(s){case"GET":{let e=await a.Z.settings.getAll(!1);return t.status(200).json(e)}case"POST":{let s=n.Z.parse(e.body);return await a.Z.settings.update(s),(0,u.Z)("Settings update",`Admin ${e.user?.displayName} (${e.user?.id}) updated the panel settings`,e.user?.id),t.status(200).json({message:"Settings updated"})}}};r()}catch(e){r(e)}})},46634:(e,t,s)=>{s.a(e,async(e,r)=>{try{s.d(t,{Z:()=>n});var a=s(6995),i=s(899),o=e([a,i]);[a,i]=o.then?(await o)():o;let n=async(e,t,s)=>{try{a.Z.logs.create(e,t,s);let r=await a.Z.settings.getByKey("discordWebhook",!1);r&&(0,i.Z)({url:r,embeds:[{title:`**▬▬▬▬▬ [LOG :: ${e}] ▬▬▬▬▬**`,color:5352959,description:t,timestamp:new Date().toISOString()}]})}catch(e){error(`Failed to log: ${e}`)}};r()}catch(e){r(e)}})},73153:(e,t,s)=>{s.a(e,async(e,r)=>{try{s.d(t,{Z:()=>o});var a=s(6995),i=e([a]);a=(i.then?(await i)():i)[0];let o=(e,t,s,r="AND")=>new Promise(async(i,o)=>{if(!e.user)return o(t.status(400).json({success:!1,error:"Protected Route"}));let n=e.user.id,u=await a.Z.admins.getBySteam64(n);if(!u)return o(t.status(401).json({success:!1,error:"Protected Route"}));if(!s)return i(u);let d=null;if("object"==typeof u.flags)d=u.flags;else{let e=await a.Z.adminGroups.getById(u.flags);e&&(d=e.flags)}if(null===d||!("AND"===r?s.every(e=>d.includes(e)):s.some(e=>d.includes(e))))return o(t.status(403).json({success:!1,error:"Protected Route"}));i(u)});r()}catch(e){r(e)}})}};var t=require("../../../webpack-api-runtime.js");t.C(e);var s=e=>t(t.s=e),r=t.X(0,[2546],()=>s(18390));module.exports=r})();